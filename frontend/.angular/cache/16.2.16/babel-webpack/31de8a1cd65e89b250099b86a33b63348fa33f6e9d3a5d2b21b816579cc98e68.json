{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CotizarComponent } from './components/cotizar/cotizar.component';\nimport { RealizarEnvioComponent } from './components/realizar-envio/realizar-envio.component';\nimport { RastreoComponent } from './components/rastreo/rastreo.component';\nimport { ContactoComponent } from './components/contacto/contacto.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RoleGuard } from './guards/role.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [\n// Rutas públicas\n{\n  path: '',\n  component: HomeComponent\n}, {\n  path: 'cotizar',\n  component: CotizarComponent\n}, {\n  path: 'realizar-envio',\n  component: RealizarEnvioComponent\n}, {\n  path: 'rastreo',\n  component: RastreoComponent\n}, {\n  path: 'contacto',\n  component: ContactoComponent\n},\n// Ruta de login\n{\n  path: 'login',\n  component: LoginComponent\n},\n// Rutas protegidas (requieren autenticación)\n{\n  path: 'admin',\n  component: AdminComponent,\n  canActivate: [AuthGuard]\n},\n// Rutas adicionales protegidas por rol (para futuro)\n{\n  path: 'admin/users',\n  component: AdminComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: ['admin']\n  }\n}, {\n  path: 'admin/operations',\n  component: AdminComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: ['admin', 'operator']\n  }\n},\n// Wildcard route para páginas no encontradas\n{\n  path: '**',\n  redirectTo: ''\n}];\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","HomeComponent","CotizarComponent","RealizarEnvioComponent","RastreoComponent","ContactoComponent","LoginComponent","AdminComponent","AuthGuard","RoleGuard","routes","path","component","canActivate","data","roles","redirectTo","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["C:\\Users\\Ferna\\Desktop\\envios ds\\DsEnvios\\frontend\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CotizarComponent } from './components/cotizar/cotizar.component';\r\nimport { RealizarEnvioComponent } from './components/realizar-envio/realizar-envio.component';\r\nimport { RastreoComponent } from './components/rastreo/rastreo.component';\r\nimport { ContactoComponent } from './components/contacto/contacto.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { RoleGuard } from './guards/role.guard';\r\n\r\nconst routes: Routes = [\r\n  // Rutas públicas\r\n  { path: '', component: HomeComponent },\r\n  { path: 'cotizar', component: CotizarComponent },\r\n  { path: 'realizar-envio', component: RealizarEnvioComponent },\r\n  { path: 'rastreo', component: RastreoComponent },\r\n  { path: 'contacto', component: ContactoComponent },\r\n  \r\n  // Ruta de login\r\n  { path: 'login', component: LoginComponent },\r\n  \r\n  // Rutas protegidas (requieren autenticación)\r\n  { \r\n    path: 'admin', \r\n    component: AdminComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  \r\n  // Rutas adicionales protegidas por rol (para futuro)\r\n  { \r\n    path: 'admin/users', \r\n    component: AdminComponent,  // Placeholder, se puede crear componente específico\r\n    canActivate: [AuthGuard, RoleGuard],\r\n    data: { roles: ['admin'] }\r\n  },\r\n  \r\n  { \r\n    path: 'admin/operations', \r\n    component: AdminComponent,  // Placeholder, se puede crear componente específico\r\n    canActivate: [AuthGuard, RoleGuard],\r\n    data: { roles: ['admin', 'operator'] }\r\n  },\r\n  \r\n  // Wildcard route para páginas no encontradas\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,aAAa,QAAQ,kCAAkC;AAChE,SAASC,gBAAgB,QAAQ,wCAAwC;AACzE,SAASC,sBAAsB,QAAQ,sDAAsD;AAC7F,SAASC,gBAAgB,QAAQ,wCAAwC;AACzE,SAASC,iBAAiB,QAAQ,0CAA0C;AAC5E,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,SAAS,QAAQ,qBAAqB;;;AAE/C,MAAMC,MAAM,GAAW;AACrB;AACA;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEX;AAAa,CAAE,EACtC;EAAEU,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEV;AAAgB,CAAE,EAChD;EAAES,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAET;AAAsB,CAAE,EAC7D;EAAEQ,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAER;AAAgB,CAAE,EAChD;EAAEO,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEP;AAAiB,CAAE;AAElD;AACA;EAAEM,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEN;AAAc,CAAE;AAE5C;AACA;EACEK,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEL,cAAc;EACzBM,WAAW,EAAE,CAACL,SAAS;CACxB;AAED;AACA;EACEG,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEL,cAAc;EACzBM,WAAW,EAAE,CAACL,SAAS,EAAEC,SAAS,CAAC;EACnCK,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAC;CACzB,EAED;EACEJ,IAAI,EAAE,kBAAkB;EACxBC,SAAS,EAAEL,cAAc;EACzBM,WAAW,EAAE,CAACL,SAAS,EAAEC,SAAS,CAAC;EACnCK,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO,EAAE,UAAU;EAAC;CACrC;AAED;AACA;EAAEJ,IAAI,EAAE,IAAI;EAAEK,UAAU,EAAE;AAAE,CAAE,CAC/B;AAMD,OAAM,MAAOC,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBjB,YAAY,CAACkB,OAAO,CAACR,MAAM,CAAC,EAC5BV,YAAY;IAAA;EAAA;;;2EAEXiB,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAApB,YAAA;IAAAqB,OAAA,GAFjBrB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}