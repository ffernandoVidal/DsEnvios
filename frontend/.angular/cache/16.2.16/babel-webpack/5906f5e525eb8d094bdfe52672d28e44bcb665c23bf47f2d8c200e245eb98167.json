{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\nexport let RealizarEnvioComponent = class RealizarEnvioComponent {\n  constructor(authService, router, http, enviosService) {\n    this.authService = authService;\n    this.router = router;\n    this.http = http;\n    this.enviosService = enviosService;\n    this.subscription = new Subscription();\n    this.apiUrl = 'http://localhost:3005/api';\n    this.currentUser = null;\n    this.isLoading = false;\n    this.isSubmitting = false;\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.currentStep = 1;\n    this.totalSteps = 4;\n    // Datos para la b√∫squeda de direcciones frecuentes\n    this.searchTerm = '';\n    this.frequentAddresses = [];\n    this.showFrequentAddresses = false;\n    // Variables para b√∫squeda de direcciones\n    this.busquedaDepartamento = '';\n    this.busquedaMunicipio = '';\n    this.departamentosFiltrados = [];\n    this.municipiosFiltrados = [];\n    this.mostrarListaDepartamentos = false;\n    this.mostrarListaMunicipios = false;\n    // Lista completa de municipios con departamento\n    this.todosLosMunicipios = [];\n    // Datos de departamentos y municipios de Guatemala\n    this.departamentosGuatemala = [{\n      nombre: 'Guatemala',\n      municipios: ['Guatemala', 'Santa Catarina Pinula', 'San Jos√© Pinula', 'San Jos√© del Golfo', 'Palencia', 'Chinautla', 'San Pedro Ayampuc', 'Mixco', 'San Pedro Sacatep√©quez', 'San Juan Sacatep√©quez', 'San Raymundo', 'Chuarrancho', 'Fraijanes', 'Amatitl√°n', 'Villa Nueva', 'Villa Canales', 'San Miguel Petapa']\n    }, {\n      nombre: 'Alta Verapaz',\n      municipios: ['Cob√°n', 'Santa Cruz Verapaz', 'San Crist√≥bal Verapaz', 'Tactic', 'Tamah√∫', 'Tucur√∫', 'Panz√≥s', 'Senah√∫', 'San Pedro Carch√°', 'San Juan Chamelco', 'Lanqu√≠n', 'Santa Mar√≠a Cahab√≥n', 'Chisec', 'Chahal', 'Fray Bartolom√© de las Casas', 'La Tinta']\n    }, {\n      nombre: 'Baja Verapaz',\n      municipios: ['Salam√°', 'San Miguel Chicaj', 'Rabinal', 'Cubulco', 'Granados', 'Santa Cruz el Chol', 'San Jer√≥nimo', 'Purulh√°']\n    }, {\n      nombre: 'Chimaltenango',\n      municipios: ['Chimaltenango', 'San Jos√© Poaquil', 'San Mart√≠n Jilotepeque', 'San Juan Comalapa', 'Santa Apolonia', 'Tecp√°n', 'Patz√∫n', 'Pochuta', 'Patzic√≠a', 'Santa Cruz Balany√°', 'Acatenango', 'Yepocapa', 'San Andr√©s Itzapa', 'Parramos', 'Zaragoza', 'El Tejar']\n    }, {\n      nombre: 'Chiquimula',\n      municipios: ['Chiquimula', 'San Jos√© la Arada', 'San Juan Ermita', 'Jocot√°n', 'Camot√°n', 'Olopa', 'Esquipulas', 'Concepci√≥n Las Minas', 'Quezaltepeque', 'San Jacinto', 'Ipala']\n    }, {\n      nombre: 'El Progreso',\n      municipios: ['Guastatoya', 'Moraz√°n', 'San Agust√≠n Acasaguastl√°n', 'San Crist√≥bal Acasaguastl√°n', 'El J√≠caro', 'Sansare', 'Sanarate', 'San Antonio La Paz']\n    }, {\n      nombre: 'Escuintla',\n      municipios: ['Escuintla', 'Santa Luc√≠a Cotzumalguapa', 'La Democracia', 'Siquinal√°', 'Masagua', 'Tiquisate', 'La Gomera', 'Guanagazapa', 'San Jos√©', 'Iztapa', 'Pal√≠n', 'San Vicente Pacaya', 'Nueva Concepci√≥n']\n    }, {\n      nombre: 'Huehuetenango',\n      municipios: ['Huehuetenango', 'Chiantla', 'Malacatancito', 'Cuilco', 'Nent√≥n', 'San Pedro Necta', 'Jacaltenango', 'San Pedro Soloma', 'San Ildefonso Ixtahuac√°n', 'Santa B√°rbara', 'La Libertad', 'La Democracia', 'San Miguel Acat√°n', 'San Rafael La Independencia', 'Todos Santos Cuchumat√°n', 'San Juan Atit√°n', 'Santa Eulalia', 'San Mateo Ixtat√°n', 'Colotenango', 'San Sebasti√°n Huehuetenango', 'Tectit√°n', 'Concepci√≥n Huista', 'San Juan Ixcoy', 'San Antonio Huista', 'San Sebasti√°n Coat√°n', 'Santa Cruz Barillas', 'Aguacat√°n', 'San Rafael Petzal', 'San Gaspar Ixchil', 'Santiago Chimaltenango', 'Santa Ana Huista', 'Uni√≥n Cantinil']\n    }, {\n      nombre: 'Izabal',\n      municipios: ['Puerto Barrios', 'Livingston', 'El Estor', 'Morales', 'Los Amates']\n    }, {\n      nombre: 'Jalapa',\n      municipios: ['Jalapa', 'San Pedro Pinula', 'San Luis Jilotepeque', 'San Manuel Chaparr√≥n', 'San Carlos Alzatate', 'Monjas', 'Mataquescuintla']\n    }, {\n      nombre: 'Jutiapa',\n      municipios: ['Jutiapa', 'El Progreso', 'Santa Catarina Mita', 'Agua Blanca', 'Asunci√≥n Mita', 'Yupiltepeque', 'Atescatempa', 'Jerez', 'El Adelanto', 'Zapotitl√°n', 'Comapa', 'Jalpatagua', 'Conguaco', 'Moyuta', 'Pasaco', 'San Jos√© Acatempa', 'Quesada']\n    }, {\n      nombre: 'Pet√©n',\n      municipios: ['Flores', 'San Jos√©', 'San Benito', 'San Andr√©s', 'La Libertad', 'San Francisco', 'Santa Ana', 'Dolores', 'San Luis', 'Sayaxch√©', 'Melchor de Mencos', 'Popt√∫n', 'Las Cruces', 'El Chal']\n    }, {\n      nombre: 'Quetzaltenango',\n      municipios: ['Quetzaltenango', 'Salcaj√°', 'Olintepeque', 'San Carlos Sija', 'Sibilia', 'Cabric√°n', 'Cajol√°', 'San Miguel Sig√ºil√°', 'San Juan Ostuncalco', 'San Mateo', 'Concepci√≥n Chiquirichapa', 'San Mart√≠n Sacatep√©quez', 'Almolonga', 'Cantel', 'Huit√°n', 'Zunil', 'Colomba Costa Cuca', 'San Francisco La Uni√≥n', 'El Palmar', 'Coatepeque', 'G√©nova', 'Flores Costa Cuca', 'La Esperanza', 'Palestina de Los Altos']\n    }, {\n      nombre: 'Quich√©',\n      municipios: ['Santa Cruz del Quich√©', 'Chich√©', 'Chinique', 'Zacualpa', 'Chajul', 'Santo Tom√°s Chichicastenango', 'Patzit√©', 'San Antonio Ilotenango', 'San Pedro Jocopilas', 'Cun√©n', 'San Juan Cotzal', 'Joyabaj', 'Nebaj', 'San Andr√©s Sajcabaj√°', 'San Miguel Uspant√°n', 'Sacapulas', 'San Bartolom√© Jocotenango', 'Canill√°', 'Chicam√°n', 'Ixc√°n', 'Pachalum', 'Playa Grande']\n    }, {\n      nombre: 'Retalhuleu',\n      municipios: ['Retalhuleu', 'San Sebasti√°n', 'Santa Cruz Mulu√°', 'San Mart√≠n Zapotitl√°n', 'San Felipe', 'San Andr√©s Villa Seca', 'Champerico', 'Nuevo San Carlos', 'El Asintal']\n    }, {\n      nombre: 'Sacatep√©quez',\n      municipios: ['Antigua Guatemala', 'Jocotenango', 'Pastores', 'Sumpango', 'Santo Domingo Xenacoj', 'Santiago Sacatep√©quez', 'San Bartolom√© Milpas Altas', 'San Lucas Sacatep√©quez', 'Santa Luc√≠a Milpas Altas', 'Magdalena Milpas Altas', 'Santa Mar√≠a de Jes√∫s', 'Ciudad Vieja', 'San Miguel Due√±as', 'Alotenango', 'San Antonio Aguas Calientes', 'Santa Catarina Barahona']\n    }, {\n      nombre: 'San Marcos',\n      municipios: ['San Marcos', 'San Pedro Sacatep√©quez', 'San Antonio Sacatep√©quez', 'Comitancillo', 'San Miguel Ixtahuac√°n', 'Concepci√≥n Tutuapa', 'Tacan√°', 'Sibinal', 'Tajumulco', 'Tejutla', 'San Rafael Pie de la Cuesta', 'Nuevo Progreso', 'El Tumbador', 'El Rodeo', 'Malacat√°n', 'Catarina', 'Ayutla', 'Oc√≥s', 'San Pablo', 'El Quetzal', 'La Reforma', 'Pajapita', 'Ixchigu√°n', 'San Jos√© Ojetenam', 'San Crist√≥bal Cucho', 'Sipacapa', 'Esquipulas Palo Gordo', 'R√≠o Blanco', 'San Lorenzo']\n    }, {\n      nombre: 'Santa Rosa',\n      municipios: ['Cuilapa', 'Casillas', 'Nueva Santa Rosa', 'Santa Rosa de Lima', 'Barberena', 'Santa Mar√≠a Ixhuat√°n', 'Guazacap√°n', 'Santa Cruz Naranjo', 'Pueblo Nuevo Vi√±as', 'Taxisco', 'Oratorio', 'San Juan Tecuaco', 'Chiquimulilla']\n    }, {\n      nombre: 'Solol√°',\n      municipios: ['Solol√°', 'San Jos√© Chacay√°', 'Santa Mar√≠a Visitaci√≥n', 'Santa Luc√≠a Utatl√°n', 'Nahual√°', 'Santa Catarina Ixtahuac√°n', 'Santa Clara La Laguna', 'Concepci√≥n', 'San Andr√©s Semetabaj', 'Panajachel', 'Santa Catarina Palop√≥', 'San Antonio Palop√≥', 'San Lucas Tolim√°n', 'Santa Cruz La Laguna', 'San Pablo La Laguna', 'San Marcos La Laguna', 'San Juan La Laguna', 'San Pedro La Laguna', 'Santiago Atitl√°n']\n    }, {\n      nombre: 'Suchitep√©quez',\n      municipios: ['Mazatenango', 'Cuyotenango', 'San Francisco Zapotitl√°n', 'San Bernardino', 'San Jos√© El √çdolo', 'Santo Domingo Suchitep√©quez', 'San Lorenzo', 'Samayac', 'San Pablo Jocopilas', 'San Antonio Suchitep√©quez', 'San Miguel Pan√°n', 'San Gabriel', 'Chicacao', 'Patulul', 'Santa B√°rbara', 'San Juan Bautista', 'Santo Tom√°s La Uni√≥n', 'Zunilito', 'Pueblo Nuevo', 'R√≠o Bravo']\n    }, {\n      nombre: 'Totonicap√°n',\n      municipios: ['Totonicap√°n', 'San Crist√≥bal Totonicap√°n', 'San Francisco El Alto', 'San Andr√©s Xecul', 'Momostenango', 'Santa Mar√≠a Chiquimula', 'Santa Luc√≠a La Reforma', 'San Bartolo']\n    }, {\n      nombre: 'Zacapa',\n      municipios: ['Zacapa', 'Estanzuela', 'R√≠o Hondo', 'Gual√°n', 'Teculut√°n', 'Usumatl√°n', 'Caba√±as', 'San Diego', 'La Uni√≥n', 'Huit√©']\n    }];\n    // Formulario principal usando las interfaces del servicio\n    this.shipmentForm = {\n      receiverName: '',\n      receiverEmail: '',\n      receiverReference: 'casa',\n      receiverPoblado: '',\n      receiverMunicipio: '',\n      receiverDepartamento: '',\n      receiverPhone: '',\n      paymentMethodId: '',\n      packageTypeId: ''\n    };\n    // Arrays para datos del servicio\n    this.paymentMethods = [];\n    this.packageTypes = [];\n    // Variables adicionales para compatibilidad\n    this.costoTotal = 0;\n    this.codigoGuia = '';\n    // Tipos de paquete para visualizaci√≥n (mismo formato que cotizar)\n    this.tiposPaqueteVisualizacion = [{\n      id: 1,\n      nombre: 'Peque√±o',\n      icono: 'üì¶',\n      limiteSize: '28cm',\n      limitePeso: '10lbs',\n      descripcion: 'Ideal para documentos y objetos peque√±os',\n      color: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\n    }, {\n      id: 2,\n      nombre: 'Mediano',\n      icono: 'üì¶',\n      limiteSize: '36cm',\n      limitePeso: '30lbs',\n      descripcion: 'Perfecto para ropa y objetos medianos',\n      color: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)'\n    }, {\n      id: 3,\n      nombre: 'Grande',\n      icono: 'üì¶',\n      limiteSize: '47cm',\n      limitePeso: '40lbs',\n      descripcion: 'Para electrodom√©sticos peque√±os y m√°s',\n      color: 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)'\n    }, {\n      id: 4,\n      nombre: 'Extra Grande',\n      icono: 'üì¶',\n      limiteSize: '51cm',\n      limitePeso: '59lbs',\n      descripcion: 'Para objetos grandes y pesados',\n      color: 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)'\n    }, {\n      id: 5,\n      nombre: 'Sobredimensionado',\n      icono: 'üì¶',\n      limiteSize: 'M√°s de 51cm',\n      limitePeso: 'M√°s de 60lbs',\n      descripcion: 'Para env√≠os especiales y muy pesados',\n      color: 'linear-gradient(135deg, #fa709a 0%, #fee140 100%)'\n    }];\n    // Variable para el tipo seleccionado\n    this.tipoSeleccionado = null;\n    // Opciones para los selectores\n    this.referenciaOpciones = [{\n      value: 'casa',\n      label: 'Casa'\n    }, {\n      value: 'trabajo',\n      label: 'Trabajo'\n    }, {\n      value: 'gimnasio',\n      label: 'Gimnasio'\n    }, {\n      value: 'escuela',\n      label: 'Escuela'\n    }];\n    this.metodoPagoOpciones = [{\n      value: 'contra_entrega',\n      label: 'Cobro contra entrega',\n      cargo: 4.00,\n      descripcion: 'Q. 4.00 de cargos adicionales'\n    }, {\n      value: 'mi_cuenta',\n      label: 'Cobro a mi cuenta',\n      cargo: 0,\n      descripcion: 'Sin cargos adicionales'\n    }, {\n      value: 'tarjeta',\n      label: 'Pago con tarjeta de cr√©dito o d√©bito',\n      cargo: 0,\n      descripcion: 'Pago inmediato'\n    }];\n    this.tiposPaquete = [{\n      value: 'sobres',\n      label: 'Sobres (hasta 500g)',\n      maxPeso: 0.5,\n      precio: 15\n    }, {\n      value: 'paquete_pequeno',\n      label: 'Paquete Peque√±o (hasta 2kg)',\n      maxPeso: 2,\n      precio: 25\n    }, {\n      value: 'paquete_mediano',\n      label: 'Paquete Mediano (hasta 5kg)',\n      maxPeso: 5,\n      precio: 35\n    }, {\n      value: 'paquete_grande',\n      label: 'Paquete Grande (hasta 10kg)',\n      maxPeso: 10,\n      precio: 50\n    }, {\n      value: 'paquete_extra',\n      label: 'Paquete Extra Grande (hasta 25kg)',\n      maxPeso: 25,\n      precio: 75\n    }];\n    // Datos de ubicaciones usando la interfaz del servicio\n    this.departamentos = [{\n      department: 'Guatemala',\n      municipality: 'Guatemala'\n    }, {\n      department: 'Guatemala',\n      municipality: 'Mixco'\n    }, {\n      department: 'Guatemala',\n      municipality: 'Villa Nueva'\n    }, {\n      department: 'Sacatep√©quez',\n      municipality: 'Antigua Guatemala'\n    }, {\n      department: 'Sacatep√©quez',\n      municipality: 'San Lucas Sacatep√©quez'\n    }];\n    // Variables para los selectores dependientes\n    this.municipiosDisponibles = [];\n    this.pobladosDisponibles = [];\n  }\n  ngOnInit() {\n    this.loadUserData();\n    this.loadFrequentAddresses();\n    this.loadPaymentMethods();\n    this.loadPackageTypes();\n    this.initializeMunicipiosList();\n  }\n  initializeMunicipiosList() {\n    // Crear lista completa de municipios con su departamento\n    this.todosLosMunicipios = [];\n    this.departamentosGuatemala.forEach(depto => {\n      depto.municipios.forEach(municipio => {\n        this.todosLosMunicipios.push({\n          nombre: municipio,\n          departamento: depto.nombre\n        });\n      });\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  loadUserData() {\n    this.subscription.add(this.authService.currentUser$.subscribe(user => {\n      this.currentUser = user;\n    }));\n  }\n  // Cargar direcciones frecuentes del usuario\n  loadFrequentAddresses() {\n    this.isLoading = true;\n    this.subscription.add(this.http.get(`${this.apiUrl}/frequent-addresses`).subscribe({\n      next: response => {\n        if (response.success) {\n          this.frequentAddresses = response.data;\n        }\n        this.isLoading = false;\n      },\n      error: error => {\n        console.error('Error loading frequent addresses:', error);\n        this.isLoading = false;\n      }\n    }));\n  }\n  // Cargar m√©todos de pago\n  loadPaymentMethods() {\n    this.subscription.add(this.enviosService.obtenerMetodosPago().subscribe({\n      next: response => {\n        if (response.success) {\n          this.paymentMethods = response.data;\n        }\n      },\n      error: error => {\n        console.error('Error loading payment methods:', error);\n      }\n    }));\n  }\n  // Cargar tipos de paquetes\n  loadPackageTypes() {\n    this.subscription.add(this.enviosService.obtenerTiposPaquetes().subscribe({\n      next: response => {\n        if (response.success) {\n          this.packageTypes = response.data;\n        }\n      },\n      error: error => {\n        console.error('Error loading package types:', error);\n      }\n    }));\n  }\n  // Buscar en direcciones frecuentes\n  onSearchFrequentAddresses() {\n    if (this.searchTerm.length >= 2) {\n      this.showFrequentAddresses = true;\n    } else {\n      this.showFrequentAddresses = false;\n    }\n  }\n  // Filtrar direcciones frecuentes\n  getFilteredFrequentAddresses() {\n    if (!this.searchTerm) return this.frequentAddresses;\n    const term = this.searchTerm.toLowerCase();\n    return this.frequentAddresses.filter(addr => addr.nickname.toLowerCase().includes(term) || addr.contactName.toLowerCase().includes(term) || addr.address.department.toLowerCase().includes(term) || addr.address.municipality.toLowerCase().includes(term));\n  }\n  // Seleccionar direcci√≥n frecuente\n  selectFrequentAddress(address) {\n    this.shipmentForm.receiverName = address.contactName;\n    this.shipmentForm.receiverEmail = address.email || '';\n    this.shipmentForm.receiverReference = address.category === 'otro' ? 'casa' : address.category;\n    this.shipmentForm.receiverDepartamento = address.address.department;\n    this.shipmentForm.receiverMunicipio = address.address.municipality;\n    this.shipmentForm.receiverPoblado = address.address.zone || '';\n    this.shipmentForm.receiverPhone = address.phone;\n    this.shipmentForm.frequentAddressId = address._id;\n    this.updateMunicipios();\n    this.showFrequentAddresses = false;\n    this.searchTerm = '';\n    // Incrementar contador de uso si se implementa en el backend\n    if (address._id) {\n      this.incrementAddressUsage(address._id);\n    }\n  }\n  incrementAddressUsage(addressId) {\n    this.http.patch(`${this.apiUrl}/frequent-addresses/${addressId}/increment`, {}).subscribe();\n  }\n  // Manejar cambios en departamento\n  onDepartamentoChange() {\n    this.shipmentForm.receiverMunicipio = '';\n    this.shipmentForm.receiverPoblado = '';\n    this.updateMunicipios();\n  }\n  // Manejar cambios en municipio\n  onMunicipioChange() {\n    this.shipmentForm.receiverPoblado = '';\n  }\n  updateMunicipios() {\n    this.municipiosDisponibles = this.departamentos.filter(d => d.department === this.shipmentForm.receiverDepartamento).map(d => d.municipality);\n  }\n  // Getter para obtener departamentos √∫nicos\n  get uniqueDepartments() {\n    return [...new Set(this.departamentos.map(d => d.department))];\n  }\n  // Manejar cambio de m√©todo de pago\n  onMetodoPagoChange() {\n    // Buscar el m√©todo seleccionado en los datos del servicio\n    const metodo = this.paymentMethods.find(m => m._id === this.shipmentForm.paymentMethodId);\n    this.calcularCostoTotal();\n  }\n  // Manejar cambio de tipo de paquete\n  onTipoPaqueteChange() {\n    // Buscar el tipo seleccionado en los datos del servicio\n    const tipo = this.packageTypes.find(t => t._id === this.shipmentForm.packageTypeId);\n    if (tipo && this.shipmentForm.packageWeight && this.shipmentForm.packageWeight > tipo.specifications.maxWeight) {\n      this.shipmentForm.packageWeight = tipo.specifications.maxWeight;\n    }\n    this.calcularCostoTotal();\n  }\n  // Calcular costo total del env√≠o\n  calcularCostoTotal() {\n    let costoBase = 0;\n    // Obtener precio base seg√∫n tipo de paquete\n    const tipoPaquete = this.packageTypes.find(t => t._id === this.shipmentForm.packageTypeId);\n    if (tipoPaquete) {\n      costoBase = tipoPaquete.pricing.basePrice;\n    }\n    // Agregar cargos adicionales por m√©todo de pago\n    const metodoPago = this.paymentMethods.find(m => m._id === this.shipmentForm.paymentMethodId);\n    const cargosPago = metodoPago ? metodoPago.fees.fixedAmount : 0;\n    // Calcular recargo por peso extra si aplica\n    let recargosPeso = 0;\n    if (tipoPaquete && this.shipmentForm.packageWeight && this.shipmentForm.packageWeight > tipoPaquete.specifications.maxWeight) {\n      const pesoExtra = this.shipmentForm.packageWeight - tipoPaquete.specifications.maxWeight;\n      recargosPeso = pesoExtra * 5; // Q5 por kg extra\n    }\n\n    this.costoTotal = costoBase + cargosPago + recargosPeso;\n  }\n  // Navegaci√≥n entre pasos\n  nextStep() {\n    if (this.validateCurrentStep()) {\n      if (this.currentStep < this.totalSteps) {\n        this.currentStep++;\n        if (this.currentStep === 4) {\n          this.calcularCostoTotal();\n          this.generateGuiaCode();\n        }\n        this.clearMessages();\n      }\n    }\n  }\n  prevStep() {\n    if (this.currentStep > 1) {\n      this.currentStep--;\n      this.clearMessages();\n    }\n  }\n  goToStep(step) {\n    if (step >= 1 && step <= this.totalSteps) {\n      this.currentStep = step;\n      this.clearMessages();\n    }\n  }\n  // Validaciones por paso\n  validateCurrentStep() {\n    this.clearMessages();\n    switch (this.currentStep) {\n      case 1:\n        return this.validateDestinatario();\n      case 2:\n        return this.validateMetodoPago();\n      case 3:\n        return this.validatePaquete();\n      case 4:\n        return true;\n      // Resumen, no necesita validaci√≥n adicional\n      default:\n        return false;\n    }\n  }\n  validateDestinatario() {\n    if (!this.shipmentForm.receiverName.trim()) {\n      this.errorMessage = 'El nombre es obligatorio';\n      return false;\n    }\n    if (!this.shipmentForm.receiverEmail.trim() || !this.isValidEmail(this.shipmentForm.receiverEmail)) {\n      this.errorMessage = 'El correo electr√≥nico es obligatorio y debe ser v√°lido';\n      return false;\n    }\n    if (!this.shipmentForm.receiverReference) {\n      this.errorMessage = 'La referencia es obligatoria';\n      return false;\n    }\n    if (!this.shipmentForm.receiverDepartamento) {\n      this.errorMessage = 'El departamento es obligatorio';\n      return false;\n    }\n    if (!this.shipmentForm.receiverPhone?.trim()) {\n      this.errorMessage = 'El n√∫mero de tel√©fono es obligatorio';\n      return false;\n    }\n    return true;\n  }\n  validateMetodoPago() {\n    if (!this.shipmentForm.paymentMethodId) {\n      this.errorMessage = 'Debe seleccionar un m√©todo de pago';\n      return false;\n    }\n    return true;\n  }\n  validatePaquete() {\n    if (!this.shipmentForm.packageTypeId) {\n      this.errorMessage = 'Debe seleccionar un tipo de paquete';\n      return false;\n    }\n    if (!this.shipmentForm.packageWeight || this.shipmentForm.packageWeight <= 0) {\n      this.errorMessage = 'El peso debe ser mayor a 0';\n      return false;\n    }\n    if (!this.shipmentForm.packageDescription?.trim()) {\n      this.errorMessage = 'La descripci√≥n del paquete es obligatoria';\n      return false;\n    }\n    if (!this.shipmentForm.packageValue || this.shipmentForm.packageValue <= 0) {\n      this.errorMessage = 'El valor declarado debe ser mayor a 0';\n      return false;\n    }\n    return true;\n  }\n  isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n  // Generar c√≥digo de gu√≠a √∫nico\n  generateGuiaCode() {\n    const prefix = 'DSE';\n    const timestamp = Date.now().toString().slice(-6);\n    const random = Math.random().toString(36).substr(2, 4).toUpperCase();\n    this.codigoGuia = `${prefix}${timestamp}${random}`;\n  }\n  // Guardar direcci√≥n como frecuente\n  saveAsFrequentAddress() {\n    const frequentAddress = {\n      nickname: `${this.shipmentForm.receiverReference} - ${this.shipmentForm.receiverName}`,\n      category: this.shipmentForm.receiverReference,\n      contactName: this.shipmentForm.receiverName,\n      phone: this.shipmentForm.receiverPhone || '',\n      email: this.shipmentForm.receiverEmail,\n      address: {\n        department: this.shipmentForm.receiverDepartamento,\n        municipality: this.shipmentForm.receiverMunicipio,\n        zone: this.shipmentForm.receiverPoblado,\n        street: this.shipmentForm.receiverAddress?.street || '',\n        reference: `${this.shipmentForm.receiverReference} address`\n      }\n    };\n    this.subscription.add(this.http.post(`${this.apiUrl}/frequent-addresses`, frequentAddress).subscribe({\n      next: response => {\n        if (response.success) {\n          this.successMessage = 'Direcci√≥n guardada como frecuente';\n          this.loadFrequentAddresses(); // Recargar lista\n        }\n      },\n\n      error: error => {\n        console.error('Error saving frequent address:', error);\n      }\n    }));\n  }\n  // Env√≠o final del formulario\n  onSubmit() {\n    if (!this.validateCurrentStep()) {\n      return;\n    }\n    this.isSubmitting = true;\n    this.clearMessages();\n    // Crear datos usando la nueva estructura del backend\n    const shipmentData = {\n      ...this.shipmentForm,\n      packageWeight: this.shipmentForm.packageWeight || 1,\n      packageValue: this.shipmentForm.packageValue || 100,\n      packageDescription: this.shipmentForm.packageDescription || 'Paquete general'\n    };\n    this.subscription.add(this.http.post(`${this.apiUrl}/shipments/create-with-validation`, shipmentData).subscribe({\n      next: response => {\n        this.isSubmitting = false;\n        if (response.success) {\n          this.codigoGuia = response.shipment.trackingNumber;\n          this.successMessage = `¬°Env√≠o creado exitosamente! C√≥digo de gu√≠a: ${this.codigoGuia}`;\n          // Generar PDF autom√°ticamente\n          this.generatePDF();\n          setTimeout(() => {\n            this.router.navigate(['/rastreo'], {\n              queryParams: {\n                codigo: this.codigoGuia\n              }\n            });\n          }, 3000);\n        } else {\n          this.errorMessage = response.message || 'Error al crear el env√≠o';\n        }\n      },\n      error: error => {\n        this.isSubmitting = false;\n        this.errorMessage = 'Error interno del servidor. Intenta nuevamente.';\n        console.error('Error creating shipment:', error);\n      }\n    }));\n  }\n  // Generar PDF de la gu√≠a\n  generatePDF() {\n    // Esta funci√≥n se implementar√° para generar el PDF con todos los datos\n    console.log('Generando PDF para gu√≠a:', this.codigoGuia);\n    // Aqu√≠ se implementar√≠a la l√≥gica para generar el PDF\n    // Puede usar librer√≠as como jsPDF o llamar a un endpoint del backend\n  }\n  // Utilidades\n  clearMessages() {\n    this.errorMessage = '';\n    this.successMessage = '';\n  }\n  resetForm() {\n    this.currentStep = 1;\n    this.shipmentForm = {\n      receiverName: '',\n      receiverEmail: '',\n      receiverReference: 'casa',\n      receiverPoblado: '',\n      receiverMunicipio: '',\n      receiverDepartamento: '',\n      receiverPhone: '',\n      paymentMethodId: '',\n      packageTypeId: ''\n    };\n    this.costoTotal = 0;\n    this.codigoGuia = '';\n    this.clearMessages();\n  }\n  getStepTitle(step) {\n    const titles = {\n      1: 'Informaci√≥n del Destinatario',\n      2: 'M√©todo de Pago',\n      3: 'Detalles del Paquete',\n      4: 'Resumen y Confirmaci√≥n'\n    };\n    return titles[step] || 'Paso';\n  }\n  // Funci√≥n para obtener el peso m√°ximo permitido por tipo de paquete\n  getMaxWeightForPackageType(typeId) {\n    const paquete = this.packageTypes.find(p => p._id === typeId);\n    return paquete ? paquete.specifications.maxWeight : 0;\n  }\n  // Funci√≥n para validar que el peso no exceda el m√°ximo\n  validateWeight() {\n    if (!this.shipmentForm.packageTypeId || !this.shipmentForm.packageWeight) {\n      return false;\n    }\n    const maxWeight = this.getMaxWeightForPackageType(this.shipmentForm.packageTypeId);\n    return this.shipmentForm.packageWeight <= maxWeight;\n  }\n  // ===== M√âTODOS DE B√öSQUEDA DE DIRECCIONES =====\n  // Filtrar departamentos seg√∫n la b√∫squeda\n  onBuscarDepartamento() {\n    if (this.busquedaDepartamento.length === 0) {\n      this.departamentosFiltrados = [];\n      this.mostrarListaDepartamentos = false;\n      return;\n    }\n    this.departamentosFiltrados = this.departamentosGuatemala.map(depto => depto.nombre).filter(nombre => nombre.toLowerCase().includes(this.busquedaDepartamento.toLowerCase())).slice(0, 10); // Limitar a 10 resultados\n    this.mostrarListaDepartamentos = this.departamentosFiltrados.length > 0;\n  }\n  // Seleccionar departamento\n  seleccionarDepartamento(departamento) {\n    this.shipmentForm.receiverDepartamento = departamento;\n    this.busquedaDepartamento = departamento;\n    this.mostrarListaDepartamentos = false;\n    // Limpiar municipio cuando se cambia el departamento\n    this.shipmentForm.receiverMunicipio = '';\n    this.busquedaMunicipio = '';\n    this.municipiosFiltrados = [];\n    this.mostrarListaMunicipios = false;\n  }\n  // Filtrar municipios seg√∫n la b√∫squeda y departamento seleccionado\n  onBuscarMunicipio() {\n    if (this.busquedaMunicipio.length === 0) {\n      this.municipiosFiltrados = [];\n      this.mostrarListaMunicipios = false;\n      return;\n    }\n    // Si hay departamento seleccionado, filtrar solo los municipios de ese departamento\n    let municipiosParaFiltrar = this.todosLosMunicipios;\n    if (this.shipmentForm.receiverDepartamento) {\n      municipiosParaFiltrar = this.todosLosMunicipios.filter(municipio => municipio.departamento === this.shipmentForm.receiverDepartamento);\n    }\n    this.municipiosFiltrados = municipiosParaFiltrar.filter(municipio => municipio.nombre.toLowerCase().includes(this.busquedaMunicipio.toLowerCase())).slice(0, 10); // Limitar a 10 resultados\n    this.mostrarListaMunicipios = this.municipiosFiltrados.length > 0;\n  }\n  // Seleccionar municipio\n  seleccionarMunicipio(municipio) {\n    this.shipmentForm.receiverMunicipio = municipio.nombre;\n    this.busquedaMunicipio = municipio.nombre;\n    this.mostrarListaMunicipios = false;\n    // Auto-completar departamento si no estaba seleccionado\n    if (!this.shipmentForm.receiverDepartamento) {\n      this.shipmentForm.receiverDepartamento = municipio.departamento;\n      this.busquedaDepartamento = municipio.departamento;\n    }\n  }\n  // Ocultar listas cuando se hace clic fuera\n  onBlurDepartamento() {\n    setTimeout(() => {\n      this.mostrarListaDepartamentos = false;\n    }, 200);\n  }\n  onBlurMunicipio() {\n    setTimeout(() => {\n      this.mostrarListaMunicipios = false;\n    }, 200);\n  }\n  // Mostrar listas al hacer focus\n  onFocusDepartamento() {\n    if (this.departamentosFiltrados.length > 0) {\n      this.mostrarListaDepartamentos = true;\n    }\n  }\n  onFocusMunicipio() {\n    if (this.municipiosFiltrados.length > 0) {\n      this.mostrarListaMunicipios = true;\n    }\n  }\n  // ===== M√âTODOS PARA SELECCI√ìN DE TIPO DE PAQUETE =====\n  // Seleccionar tipo de paquete\n  seleccionarTipoPaquete(tipo) {\n    this.tipoSeleccionado = tipo;\n    // Buscar el packageType correspondiente en el arreglo del servicio\n    const packageTypeCorrespondiente = this.packageTypes.find(pt => pt.displayName.toLowerCase().includes(tipo.nombre.toLowerCase()) || tipo.nombre.toLowerCase().includes(pt.displayName.toLowerCase()));\n    if (packageTypeCorrespondiente && packageTypeCorrespondiente._id) {\n      this.shipmentForm.packageTypeId = packageTypeCorrespondiente._id;\n      this.onTipoPaqueteChange();\n    }\n  }\n};\nRealizarEnvioComponent = __decorate([Component({\n  selector: 'app-realizar-envio',\n  templateUrl: './realizar-envio.component.html',\n  styleUrls: ['./realizar-envio.component.css']\n})], RealizarEnvioComponent);","map":{"version":3,"names":["Component","Subscription","RealizarEnvioComponent","constructor","authService","router","http","enviosService","subscription","apiUrl","currentUser","isLoading","isSubmitting","errorMessage","successMessage","currentStep","totalSteps","searchTerm","frequentAddresses","showFrequentAddresses","busquedaDepartamento","busquedaMunicipio","departamentosFiltrados","municipiosFiltrados","mostrarListaDepartamentos","mostrarListaMunicipios","todosLosMunicipios","departamentosGuatemala","nombre","municipios","shipmentForm","receiverName","receiverEmail","receiverReference","receiverPoblado","receiverMunicipio","receiverDepartamento","receiverPhone","paymentMethodId","packageTypeId","paymentMethods","packageTypes","costoTotal","codigoGuia","tiposPaqueteVisualizacion","id","icono","limiteSize","limitePeso","descripcion","color","tipoSeleccionado","referenciaOpciones","value","label","metodoPagoOpciones","cargo","tiposPaquete","maxPeso","precio","departamentos","department","municipality","municipiosDisponibles","pobladosDisponibles","ngOnInit","loadUserData","loadFrequentAddresses","loadPaymentMethods","loadPackageTypes","initializeMunicipiosList","forEach","depto","municipio","push","departamento","ngOnDestroy","unsubscribe","add","currentUser$","subscribe","user","get","next","response","success","data","error","console","obtenerMetodosPago","obtenerTiposPaquetes","onSearchFrequentAddresses","length","getFilteredFrequentAddresses","term","toLowerCase","filter","addr","nickname","includes","contactName","address","selectFrequentAddress","email","category","zone","phone","frequentAddressId","_id","updateMunicipios","incrementAddressUsage","addressId","patch","onDepartamentoChange","onMunicipioChange","d","map","uniqueDepartments","Set","onMetodoPagoChange","metodo","find","m","calcularCostoTotal","onTipoPaqueteChange","tipo","t","packageWeight","specifications","maxWeight","costoBase","tipoPaquete","pricing","basePrice","metodoPago","cargosPago","fees","fixedAmount","recargosPeso","pesoExtra","nextStep","validateCurrentStep","generateGuiaCode","clearMessages","prevStep","goToStep","step","validateDestinatario","validateMetodoPago","validatePaquete","trim","isValidEmail","packageDescription","packageValue","emailRegex","test","prefix","timestamp","Date","now","toString","slice","random","Math","substr","toUpperCase","saveAsFrequentAddress","frequentAddress","street","receiverAddress","reference","post","onSubmit","shipmentData","shipment","trackingNumber","generatePDF","setTimeout","navigate","queryParams","codigo","message","log","resetForm","getStepTitle","titles","getMaxWeightForPackageType","typeId","paquete","p","validateWeight","onBuscarDepartamento","seleccionarDepartamento","onBuscarMunicipio","municipiosParaFiltrar","seleccionarMunicipio","onBlurDepartamento","onBlurMunicipio","onFocusDepartamento","onFocusMunicipio","seleccionarTipoPaquete","packageTypeCorrespondiente","pt","displayName","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Ferna\\Desktop\\envios\\DsEnvios\\frontend\\src\\app\\components\\realizar-envio\\realizar-envio.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { EnviosService, FrequentAddress, PaymentMethod, PackageType, NewShipmentForm, LocationData } from '../../services/envios.service';\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  name: string;\r\n  role: string;\r\n  email: string;\r\n}\r\n\r\ninterface Municipio {\r\n  nombre: string;\r\n  departamento: string;\r\n}\r\n\r\ninterface Departamento {\r\n  nombre: string;\r\n  municipios: string[];\r\n}\r\n\r\ninterface TipoPaquete {\r\n  id: number;\r\n  nombre: string;\r\n  icono: string;\r\n  limiteSize: string;\r\n  limitePeso: string;\r\n  descripcion: string;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-realizar-envio',\r\n  templateUrl: './realizar-envio.component.html',\r\n  styleUrls: ['./realizar-envio.component.css']\r\n})\r\nexport class RealizarEnvioComponent implements OnInit, OnDestroy {\r\n  private subscription: Subscription = new Subscription();\r\n  private apiUrl = 'http://localhost:3005/api';\r\n  \r\n  currentUser: User | null = null;\r\n  isLoading = false;\r\n  isSubmitting = false;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  currentStep = 1;\r\n  totalSteps = 4;\r\n\r\n  // Datos para la b√∫squeda de direcciones frecuentes\r\n  searchTerm = '';\r\n  frequentAddresses: FrequentAddress[] = [];\r\n  showFrequentAddresses = false;\r\n\r\n  // Variables para b√∫squeda de direcciones\r\n  busquedaDepartamento = '';\r\n  busquedaMunicipio = '';\r\n  departamentosFiltrados: string[] = [];\r\n  municipiosFiltrados: Municipio[] = [];\r\n  mostrarListaDepartamentos = false;\r\n  mostrarListaMunicipios = false;\r\n  \r\n  // Lista completa de municipios con departamento\r\n  todosLosMunicipios: Municipio[] = [];\r\n\r\n  // Datos de departamentos y municipios de Guatemala\r\n  departamentosGuatemala: Departamento[] = [\r\n    {\r\n      nombre: 'Guatemala',\r\n      municipios: [\r\n        'Guatemala', 'Santa Catarina Pinula', 'San Jos√© Pinula', 'San Jos√© del Golfo',\r\n        'Palencia', 'Chinautla', 'San Pedro Ayampuc', 'Mixco', 'San Pedro Sacatep√©quez',\r\n        'San Juan Sacatep√©quez', 'San Raymundo', 'Chuarrancho', 'Fraijanes',\r\n        'Amatitl√°n', 'Villa Nueva', 'Villa Canales', 'San Miguel Petapa'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Alta Verapaz',\r\n      municipios: [\r\n        'Cob√°n', 'Santa Cruz Verapaz', 'San Crist√≥bal Verapaz', 'Tactic', 'Tamah√∫',\r\n        'Tucur√∫', 'Panz√≥s', 'Senah√∫', 'San Pedro Carch√°', 'San Juan Chamelco',\r\n        'Lanqu√≠n', 'Santa Mar√≠a Cahab√≥n', 'Chisec', 'Chahal', 'Fray Bartolom√© de las Casas',\r\n        'La Tinta'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Baja Verapaz',\r\n      municipios: [\r\n        'Salam√°', 'San Miguel Chicaj', 'Rabinal', 'Cubulco', 'Granados',\r\n        'Santa Cruz el Chol', 'San Jer√≥nimo', 'Purulh√°'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Chimaltenango',\r\n      municipios: [\r\n        'Chimaltenango', 'San Jos√© Poaquil', 'San Mart√≠n Jilotepeque', 'San Juan Comalapa',\r\n        'Santa Apolonia', 'Tecp√°n', 'Patz√∫n', 'Pochuta', 'Patzic√≠a', 'Santa Cruz Balany√°',\r\n        'Acatenango', 'Yepocapa', 'San Andr√©s Itzapa', 'Parramos', 'Zaragoza', 'El Tejar'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Chiquimula',\r\n      municipios: [\r\n        'Chiquimula', 'San Jos√© la Arada', 'San Juan Ermita', 'Jocot√°n', 'Camot√°n',\r\n        'Olopa', 'Esquipulas', 'Concepci√≥n Las Minas', 'Quezaltepeque', 'San Jacinto', 'Ipala'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'El Progreso',\r\n      municipios: [\r\n        'Guastatoya', 'Moraz√°n', 'San Agust√≠n Acasaguastl√°n', 'San Crist√≥bal Acasaguastl√°n',\r\n        'El J√≠caro', 'Sansare', 'Sanarate', 'San Antonio La Paz'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Escuintla',\r\n      municipios: [\r\n        'Escuintla', 'Santa Luc√≠a Cotzumalguapa', 'La Democracia', 'Siquinal√°',\r\n        'Masagua', 'Tiquisate', 'La Gomera', 'Guanagazapa', 'San Jos√©',\r\n        'Iztapa', 'Pal√≠n', 'San Vicente Pacaya', 'Nueva Concepci√≥n'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Huehuetenango',\r\n      municipios: [\r\n        'Huehuetenango', 'Chiantla', 'Malacatancito', 'Cuilco', 'Nent√≥n', 'San Pedro Necta',\r\n        'Jacaltenango', 'San Pedro Soloma', 'San Ildefonso Ixtahuac√°n', 'Santa B√°rbara',\r\n        'La Libertad', 'La Democracia', 'San Miguel Acat√°n', 'San Rafael La Independencia',\r\n        'Todos Santos Cuchumat√°n', 'San Juan Atit√°n', 'Santa Eulalia', 'San Mateo Ixtat√°n',\r\n        'Colotenango', 'San Sebasti√°n Huehuetenango', 'Tectit√°n', 'Concepci√≥n Huista',\r\n        'San Juan Ixcoy', 'San Antonio Huista', 'San Sebasti√°n Coat√°n', 'Santa Cruz Barillas',\r\n        'Aguacat√°n', 'San Rafael Petzal', 'San Gaspar Ixchil', 'Santiago Chimaltenango',\r\n        'Santa Ana Huista', 'Uni√≥n Cantinil'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Izabal',\r\n      municipios: [\r\n        'Puerto Barrios', 'Livingston', 'El Estor', 'Morales', 'Los Amates'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Jalapa',\r\n      municipios: [\r\n        'Jalapa', 'San Pedro Pinula', 'San Luis Jilotepeque', 'San Manuel Chaparr√≥n',\r\n        'San Carlos Alzatate', 'Monjas', 'Mataquescuintla'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Jutiapa',\r\n      municipios: [\r\n        'Jutiapa', 'El Progreso', 'Santa Catarina Mita', 'Agua Blanca', 'Asunci√≥n Mita',\r\n        'Yupiltepeque', 'Atescatempa', 'Jerez', 'El Adelanto', 'Zapotitl√°n',\r\n        'Comapa', 'Jalpatagua', 'Conguaco', 'Moyuta', 'Pasaco', 'San Jos√© Acatempa', 'Quesada'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Pet√©n',\r\n      municipios: [\r\n        'Flores', 'San Jos√©', 'San Benito', 'San Andr√©s', 'La Libertad', 'San Francisco',\r\n        'Santa Ana', 'Dolores', 'San Luis', 'Sayaxch√©', 'Melchor de Mencos', 'Popt√∫n',\r\n        'Las Cruces', 'El Chal'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Quetzaltenango',\r\n      municipios: [\r\n        'Quetzaltenango', 'Salcaj√°', 'Olintepeque', 'San Carlos Sija', 'Sibilia',\r\n        'Cabric√°n', 'Cajol√°', 'San Miguel Sig√ºil√°', 'San Juan Ostuncalco', 'San Mateo',\r\n        'Concepci√≥n Chiquirichapa', 'San Mart√≠n Sacatep√©quez', 'Almolonga', 'Cantel',\r\n        'Huit√°n', 'Zunil', 'Colomba Costa Cuca', 'San Francisco La Uni√≥n', 'El Palmar',\r\n        'Coatepeque', 'G√©nova', 'Flores Costa Cuca', 'La Esperanza', 'Palestina de Los Altos'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Quich√©',\r\n      municipios: [\r\n        'Santa Cruz del Quich√©', 'Chich√©', 'Chinique', 'Zacualpa', 'Chajul', 'Santo Tom√°s Chichicastenango',\r\n        'Patzit√©', 'San Antonio Ilotenango', 'San Pedro Jocopilas', 'Cun√©n', 'San Juan Cotzal',\r\n        'Joyabaj', 'Nebaj', 'San Andr√©s Sajcabaj√°', 'San Miguel Uspant√°n', 'Sacapulas',\r\n        'San Bartolom√© Jocotenango', 'Canill√°', 'Chicam√°n', 'Ixc√°n', 'Pachalum', 'Playa Grande'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Retalhuleu',\r\n      municipios: [\r\n        'Retalhuleu', 'San Sebasti√°n', 'Santa Cruz Mulu√°', 'San Mart√≠n Zapotitl√°n',\r\n        'San Felipe', 'San Andr√©s Villa Seca', 'Champerico', 'Nuevo San Carlos', 'El Asintal'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Sacatep√©quez',\r\n      municipios: [\r\n        'Antigua Guatemala', 'Jocotenango', 'Pastores', 'Sumpango', 'Santo Domingo Xenacoj',\r\n        'Santiago Sacatep√©quez', 'San Bartolom√© Milpas Altas', 'San Lucas Sacatep√©quez',\r\n        'Santa Luc√≠a Milpas Altas', 'Magdalena Milpas Altas', 'Santa Mar√≠a de Jes√∫s',\r\n        'Ciudad Vieja', 'San Miguel Due√±as', 'Alotenango', 'San Antonio Aguas Calientes', 'Santa Catarina Barahona'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'San Marcos',\r\n      municipios: [\r\n        'San Marcos', 'San Pedro Sacatep√©quez', 'San Antonio Sacatep√©quez', 'Comitancillo',\r\n        'San Miguel Ixtahuac√°n', 'Concepci√≥n Tutuapa', 'Tacan√°', 'Sibinal', 'Tajumulco',\r\n        'Tejutla', 'San Rafael Pie de la Cuesta', 'Nuevo Progreso', 'El Tumbador',\r\n        'El Rodeo', 'Malacat√°n', 'Catarina', 'Ayutla', 'Oc√≥s', 'San Pablo',\r\n        'El Quetzal', 'La Reforma', 'Pajapita', 'Ixchigu√°n', 'San Jos√© Ojetenam',\r\n        'San Crist√≥bal Cucho', 'Sipacapa', 'Esquipulas Palo Gordo', 'R√≠o Blanco', 'San Lorenzo'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Santa Rosa',\r\n      municipios: [\r\n        'Cuilapa', 'Casillas', 'Nueva Santa Rosa', 'Santa Rosa de Lima', 'Barberena',\r\n        'Santa Mar√≠a Ixhuat√°n', 'Guazacap√°n', 'Santa Cruz Naranjo', 'Pueblo Nuevo Vi√±as',\r\n        'Taxisco', 'Oratorio', 'San Juan Tecuaco', 'Chiquimulilla'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Solol√°',\r\n      municipios: [\r\n        'Solol√°', 'San Jos√© Chacay√°', 'Santa Mar√≠a Visitaci√≥n', 'Santa Luc√≠a Utatl√°n',\r\n        'Nahual√°', 'Santa Catarina Ixtahuac√°n', 'Santa Clara La Laguna', 'Concepci√≥n',\r\n        'San Andr√©s Semetabaj', 'Panajachel', 'Santa Catarina Palop√≥', 'San Antonio Palop√≥',\r\n        'San Lucas Tolim√°n', 'Santa Cruz La Laguna', 'San Pablo La Laguna', 'San Marcos La Laguna',\r\n        'San Juan La Laguna', 'San Pedro La Laguna', 'Santiago Atitl√°n'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Suchitep√©quez',\r\n      municipios: [\r\n        'Mazatenango', 'Cuyotenango', 'San Francisco Zapotitl√°n', 'San Bernardino',\r\n        'San Jos√© El √çdolo', 'Santo Domingo Suchitep√©quez', 'San Lorenzo', 'Samayac',\r\n        'San Pablo Jocopilas', 'San Antonio Suchitep√©quez', 'San Miguel Pan√°n',\r\n        'San Gabriel', 'Chicacao', 'Patulul', 'Santa B√°rbara', 'San Juan Bautista',\r\n        'Santo Tom√°s La Uni√≥n', 'Zunilito', 'Pueblo Nuevo', 'R√≠o Bravo'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Totonicap√°n',\r\n      municipios: [\r\n        'Totonicap√°n', 'San Crist√≥bal Totonicap√°n', 'San Francisco El Alto',\r\n        'San Andr√©s Xecul', 'Momostenango', 'Santa Mar√≠a Chiquimula', 'Santa Luc√≠a La Reforma', 'San Bartolo'\r\n      ]\r\n    },\r\n    {\r\n      nombre: 'Zacapa',\r\n      municipios: [\r\n        'Zacapa', 'Estanzuela', 'R√≠o Hondo', 'Gual√°n', 'Teculut√°n', 'Usumatl√°n',\r\n        'Caba√±as', 'San Diego', 'La Uni√≥n', 'Huit√©'\r\n      ]\r\n    }\r\n  ];\r\n  \r\n  // Formulario principal usando las interfaces del servicio\r\n  shipmentForm: NewShipmentForm = {\r\n    receiverName: '',\r\n    receiverEmail: '',\r\n    receiverReference: 'casa',\r\n    receiverPoblado: '',\r\n    receiverMunicipio: '',\r\n    receiverDepartamento: '',\r\n    receiverPhone: '',\r\n    paymentMethodId: '',\r\n    packageTypeId: ''\r\n  };\r\n\r\n  // Arrays para datos del servicio\r\n  paymentMethods: PaymentMethod[] = [];\r\n  packageTypes: PackageType[] = [];\r\n  \r\n  // Variables adicionales para compatibilidad\r\n  costoTotal: number = 0;\r\n  codigoGuia: string = '';\r\n\r\n  // Tipos de paquete para visualizaci√≥n (mismo formato que cotizar)\r\n  tiposPaqueteVisualizacion: TipoPaquete[] = [\r\n    {\r\n      id: 1,\r\n      nombre: 'Peque√±o',\r\n      icono: 'üì¶',\r\n      limiteSize: '28cm',\r\n      limitePeso: '10lbs',\r\n      descripcion: 'Ideal para documentos y objetos peque√±os',\r\n      color: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\r\n    },\r\n    {\r\n      id: 2,\r\n      nombre: 'Mediano',\r\n      icono: 'üì¶',\r\n      limiteSize: '36cm',\r\n      limitePeso: '30lbs',\r\n      descripcion: 'Perfecto para ropa y objetos medianos',\r\n      color: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)'\r\n    },\r\n    {\r\n      id: 3,\r\n      nombre: 'Grande',\r\n      icono: 'üì¶',\r\n      limiteSize: '47cm',\r\n      limitePeso: '40lbs',\r\n      descripcion: 'Para electrodom√©sticos peque√±os y m√°s',\r\n      color: 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)'\r\n    },\r\n    {\r\n      id: 4,\r\n      nombre: 'Extra Grande',\r\n      icono: 'üì¶',\r\n      limiteSize: '51cm',\r\n      limitePeso: '59lbs',\r\n      descripcion: 'Para objetos grandes y pesados',\r\n      color: 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)'\r\n    },\r\n    {\r\n      id: 5,\r\n      nombre: 'Sobredimensionado',\r\n      icono: 'üì¶',\r\n      limiteSize: 'M√°s de 51cm',\r\n      limitePeso: 'M√°s de 60lbs',\r\n      descripcion: 'Para env√≠os especiales y muy pesados',\r\n      color: 'linear-gradient(135deg, #fa709a 0%, #fee140 100%)'\r\n    }\r\n  ];\r\n\r\n  // Variable para el tipo seleccionado\r\n  tipoSeleccionado: TipoPaquete | null = null;\r\n  \r\n  // Opciones para los selectores\r\n  referenciaOpciones = [\r\n    { value: 'casa', label: 'Casa' },\r\n    { value: 'trabajo', label: 'Trabajo' },\r\n    { value: 'gimnasio', label: 'Gimnasio' },\r\n    { value: 'escuela', label: 'Escuela' }\r\n  ];\r\n  \r\n  metodoPagoOpciones = [\r\n    { \r\n      value: 'contra_entrega', \r\n      label: 'Cobro contra entrega', \r\n      cargo: 4.00,\r\n      descripcion: 'Q. 4.00 de cargos adicionales' \r\n    },\r\n    { \r\n      value: 'mi_cuenta', \r\n      label: 'Cobro a mi cuenta', \r\n      cargo: 0,\r\n      descripcion: 'Sin cargos adicionales' \r\n    },\r\n    { \r\n      value: 'tarjeta', \r\n      label: 'Pago con tarjeta de cr√©dito o d√©bito', \r\n      cargo: 0,\r\n      descripcion: 'Pago inmediato' \r\n    }\r\n  ];\r\n  \r\n  tiposPaquete = [\r\n    { value: 'sobres', label: 'Sobres (hasta 500g)', maxPeso: 0.5, precio: 15 },\r\n    { value: 'paquete_pequeno', label: 'Paquete Peque√±o (hasta 2kg)', maxPeso: 2, precio: 25 },\r\n    { value: 'paquete_mediano', label: 'Paquete Mediano (hasta 5kg)', maxPeso: 5, precio: 35 },\r\n    { value: 'paquete_grande', label: 'Paquete Grande (hasta 10kg)', maxPeso: 10, precio: 50 },\r\n    { value: 'paquete_extra', label: 'Paquete Extra Grande (hasta 25kg)', maxPeso: 25, precio: 75 }\r\n  ];\r\n  \r\n  // Datos de ubicaciones usando la interfaz del servicio\r\n  departamentos: LocationData[] = [\r\n    {\r\n      department: 'Guatemala',\r\n      municipality: 'Guatemala'\r\n    },\r\n    {\r\n      department: 'Guatemala',\r\n      municipality: 'Mixco'\r\n    },\r\n    {\r\n      department: 'Guatemala',\r\n      municipality: 'Villa Nueva'\r\n    },\r\n    {\r\n      department: 'Sacatep√©quez',\r\n      municipality: 'Antigua Guatemala'\r\n    },\r\n    {\r\n      department: 'Sacatep√©quez',\r\n      municipality: 'San Lucas Sacatep√©quez'\r\n    }\r\n  ];\r\n  \r\n  // Variables para los selectores dependientes\r\n  municipiosDisponibles: string[] = [];\r\n  pobladosDisponibles: string[] = [];\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private enviosService: EnviosService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadUserData();\r\n    this.loadFrequentAddresses();\r\n    this.loadPaymentMethods();\r\n    this.loadPackageTypes();\r\n    this.initializeMunicipiosList();\r\n  }\r\n\r\n  private initializeMunicipiosList(): void {\r\n    // Crear lista completa de municipios con su departamento\r\n    this.todosLosMunicipios = [];\r\n    this.departamentosGuatemala.forEach(depto => {\r\n      depto.municipios.forEach(municipio => {\r\n        this.todosLosMunicipios.push({\r\n          nombre: municipio,\r\n          departamento: depto.nombre\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  private loadUserData(): void {\r\n    this.subscription.add(\r\n      this.authService.currentUser$.subscribe(user => {\r\n        this.currentUser = user;\r\n      })\r\n    );\r\n  }\r\n\r\n  // Cargar direcciones frecuentes del usuario\r\n  private loadFrequentAddresses(): void {\r\n    this.isLoading = true;\r\n    this.subscription.add(\r\n      this.http.get<{success: boolean, data: FrequentAddress[]}>(`${this.apiUrl}/frequent-addresses`).subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.frequentAddresses = response.data;\r\n          }\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading frequent addresses:', error);\r\n          this.isLoading = false;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  // Cargar m√©todos de pago\r\n  private loadPaymentMethods(): void {\r\n    this.subscription.add(\r\n      this.enviosService.obtenerMetodosPago().subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.paymentMethods = response.data;\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading payment methods:', error);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  // Cargar tipos de paquetes\r\n  private loadPackageTypes(): void {\r\n    this.subscription.add(\r\n      this.enviosService.obtenerTiposPaquetes().subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.packageTypes = response.data;\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading package types:', error);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  // Buscar en direcciones frecuentes\r\n  onSearchFrequentAddresses(): void {\r\n    if (this.searchTerm.length >= 2) {\r\n      this.showFrequentAddresses = true;\r\n    } else {\r\n      this.showFrequentAddresses = false;\r\n    }\r\n  }\r\n\r\n  // Filtrar direcciones frecuentes\r\n  getFilteredFrequentAddresses(): FrequentAddress[] {\r\n    if (!this.searchTerm) return this.frequentAddresses;\r\n    \r\n    const term = this.searchTerm.toLowerCase();\r\n    return this.frequentAddresses.filter(addr => \r\n      addr.nickname.toLowerCase().includes(term) ||\r\n      addr.contactName.toLowerCase().includes(term) ||\r\n      addr.address.department.toLowerCase().includes(term) ||\r\n      addr.address.municipality.toLowerCase().includes(term)\r\n    );\r\n  }\r\n\r\n  // Seleccionar direcci√≥n frecuente\r\n  selectFrequentAddress(address: FrequentAddress): void {\r\n    this.shipmentForm.receiverName = address.contactName;\r\n    this.shipmentForm.receiverEmail = address.email || '';\r\n    this.shipmentForm.receiverReference = address.category === 'otro' ? 'casa' : address.category;\r\n    this.shipmentForm.receiverDepartamento = address.address.department;\r\n    this.shipmentForm.receiverMunicipio = address.address.municipality;\r\n    this.shipmentForm.receiverPoblado = address.address.zone || '';\r\n    this.shipmentForm.receiverPhone = address.phone;\r\n    this.shipmentForm.frequentAddressId = address._id;\r\n    \r\n    this.updateMunicipios();\r\n    this.showFrequentAddresses = false;\r\n    this.searchTerm = '';\r\n    \r\n    // Incrementar contador de uso si se implementa en el backend\r\n    if (address._id) {\r\n      this.incrementAddressUsage(address._id);\r\n    }\r\n  }\r\n\r\n  private incrementAddressUsage(addressId: string): void {\r\n    this.http.patch(`${this.apiUrl}/frequent-addresses/${addressId}/increment`, {}).subscribe();\r\n  }\r\n\r\n  // Manejar cambios en departamento\r\n  onDepartamentoChange(): void {\r\n    this.shipmentForm.receiverMunicipio = '';\r\n    this.shipmentForm.receiverPoblado = '';\r\n    this.updateMunicipios();\r\n  }\r\n\r\n  // Manejar cambios en municipio\r\n  onMunicipioChange(): void {\r\n    this.shipmentForm.receiverPoblado = '';\r\n  }\r\n\r\n  private updateMunicipios(): void {\r\n    this.municipiosDisponibles = this.departamentos\r\n      .filter(d => d.department === this.shipmentForm.receiverDepartamento)\r\n      .map(d => d.municipality);\r\n  }\r\n\r\n  // Getter para obtener departamentos √∫nicos\r\n  get uniqueDepartments(): string[] {\r\n    return [...new Set(this.departamentos.map(d => d.department))];\r\n  }\r\n\r\n  // Manejar cambio de m√©todo de pago\r\n  onMetodoPagoChange(): void {\r\n    // Buscar el m√©todo seleccionado en los datos del servicio\r\n    const metodo = this.paymentMethods.find(m => m._id === this.shipmentForm.paymentMethodId);\r\n    this.calcularCostoTotal();\r\n  }\r\n\r\n  // Manejar cambio de tipo de paquete\r\n  onTipoPaqueteChange(): void {\r\n    // Buscar el tipo seleccionado en los datos del servicio\r\n    const tipo = this.packageTypes.find(t => t._id === this.shipmentForm.packageTypeId);\r\n    if (tipo && this.shipmentForm.packageWeight && this.shipmentForm.packageWeight > tipo.specifications.maxWeight) {\r\n      this.shipmentForm.packageWeight = tipo.specifications.maxWeight;\r\n    }\r\n    this.calcularCostoTotal();\r\n  }\r\n\r\n  // Calcular costo total del env√≠o\r\n  calcularCostoTotal(): void {\r\n    let costoBase = 0;\r\n    \r\n    // Obtener precio base seg√∫n tipo de paquete\r\n    const tipoPaquete = this.packageTypes.find(t => t._id === this.shipmentForm.packageTypeId);\r\n    if (tipoPaquete) {\r\n      costoBase = tipoPaquete.pricing.basePrice;\r\n    }\r\n    \r\n    // Agregar cargos adicionales por m√©todo de pago\r\n    const metodoPago = this.paymentMethods.find(m => m._id === this.shipmentForm.paymentMethodId);\r\n    const cargosPago = metodoPago ? metodoPago.fees.fixedAmount : 0;\r\n    \r\n    // Calcular recargo por peso extra si aplica\r\n    let recargosPeso = 0;\r\n    if (tipoPaquete && this.shipmentForm.packageWeight && this.shipmentForm.packageWeight > tipoPaquete.specifications.maxWeight) {\r\n      const pesoExtra = this.shipmentForm.packageWeight - tipoPaquete.specifications.maxWeight;\r\n      recargosPeso = pesoExtra * 5; // Q5 por kg extra\r\n    }\r\n    \r\n    this.costoTotal = costoBase + cargosPago + recargosPeso;\r\n  }\r\n\r\n  // Navegaci√≥n entre pasos\r\n  nextStep(): void {\r\n    if (this.validateCurrentStep()) {\r\n      if (this.currentStep < this.totalSteps) {\r\n        this.currentStep++;\r\n        if (this.currentStep === 4) {\r\n          this.calcularCostoTotal();\r\n          this.generateGuiaCode();\r\n        }\r\n        this.clearMessages();\r\n      }\r\n    }\r\n  }\r\n\r\n  prevStep(): void {\r\n    if (this.currentStep > 1) {\r\n      this.currentStep--;\r\n      this.clearMessages();\r\n    }\r\n  }\r\n\r\n  goToStep(step: number): void {\r\n    if (step >= 1 && step <= this.totalSteps) {\r\n      this.currentStep = step;\r\n      this.clearMessages();\r\n    }\r\n  }\r\n\r\n  // Validaciones por paso\r\n  validateCurrentStep(): boolean {\r\n    this.clearMessages();\r\n    \r\n    switch (this.currentStep) {\r\n      case 1:\r\n        return this.validateDestinatario();\r\n      case 2:\r\n        return this.validateMetodoPago();\r\n      case 3:\r\n        return this.validatePaquete();\r\n      case 4:\r\n        return true; // Resumen, no necesita validaci√≥n adicional\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  private validateDestinatario(): boolean {\r\n    if (!this.shipmentForm.receiverName.trim()) {\r\n      this.errorMessage = 'El nombre es obligatorio';\r\n      return false;\r\n    }\r\n    \r\n    if (!this.shipmentForm.receiverEmail.trim() || !this.isValidEmail(this.shipmentForm.receiverEmail)) {\r\n      this.errorMessage = 'El correo electr√≥nico es obligatorio y debe ser v√°lido';\r\n      return false;\r\n    }\r\n    \r\n    if (!this.shipmentForm.receiverReference) {\r\n      this.errorMessage = 'La referencia es obligatoria';\r\n      return false;\r\n    }\r\n    \r\n    if (!this.shipmentForm.receiverDepartamento) {\r\n      this.errorMessage = 'El departamento es obligatorio';\r\n      return false;\r\n    }\r\n    \r\n    if (!this.shipmentForm.receiverPhone?.trim()) {\r\n      this.errorMessage = 'El n√∫mero de tel√©fono es obligatorio';\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  private validateMetodoPago(): boolean {\r\n    if (!this.shipmentForm.paymentMethodId) {\r\n      this.errorMessage = 'Debe seleccionar un m√©todo de pago';\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private validatePaquete(): boolean {\r\n    if (!this.shipmentForm.packageTypeId) {\r\n      this.errorMessage = 'Debe seleccionar un tipo de paquete';\r\n      return false;\r\n    }\r\n    \r\n    if (!this.shipmentForm.packageWeight || this.shipmentForm.packageWeight <= 0) {\r\n      this.errorMessage = 'El peso debe ser mayor a 0';\r\n      return false;\r\n    }\r\n    \r\n    if (!this.shipmentForm.packageDescription?.trim()) {\r\n      this.errorMessage = 'La descripci√≥n del paquete es obligatoria';\r\n      return false;\r\n    }\r\n    \r\n    if (!this.shipmentForm.packageValue || this.shipmentForm.packageValue <= 0) {\r\n      this.errorMessage = 'El valor declarado debe ser mayor a 0';\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n\r\n  private isValidEmail(email: string): boolean {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  }\r\n\r\n  // Generar c√≥digo de gu√≠a √∫nico\r\n  private generateGuiaCode(): void {\r\n    const prefix = 'DSE';\r\n    const timestamp = Date.now().toString().slice(-6);\r\n    const random = Math.random().toString(36).substr(2, 4).toUpperCase();\r\n    this.codigoGuia = `${prefix}${timestamp}${random}`;\r\n  }\r\n\r\n  // Guardar direcci√≥n como frecuente\r\n  saveAsFrequentAddress(): void {\r\n    const frequentAddress = {\r\n      nickname: `${this.shipmentForm.receiverReference} - ${this.shipmentForm.receiverName}`,\r\n      category: this.shipmentForm.receiverReference,\r\n      contactName: this.shipmentForm.receiverName,\r\n      phone: this.shipmentForm.receiverPhone || '',\r\n      email: this.shipmentForm.receiverEmail,\r\n      address: {\r\n        department: this.shipmentForm.receiverDepartamento,\r\n        municipality: this.shipmentForm.receiverMunicipio,\r\n        zone: this.shipmentForm.receiverPoblado,\r\n        street: this.shipmentForm.receiverAddress?.street || '',\r\n        reference: `${this.shipmentForm.receiverReference} address`\r\n      }\r\n    };\r\n    \r\n    this.subscription.add(\r\n      this.http.post(`${this.apiUrl}/frequent-addresses`, frequentAddress).subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.successMessage = 'Direcci√≥n guardada como frecuente';\r\n            this.loadFrequentAddresses(); // Recargar lista\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error saving frequent address:', error);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  // Env√≠o final del formulario\r\n  onSubmit(): void {\r\n    if (!this.validateCurrentStep()) {\r\n      return;\r\n    }\r\n    \r\n    this.isSubmitting = true;\r\n    this.clearMessages();\r\n    \r\n    // Crear datos usando la nueva estructura del backend\r\n    const shipmentData = {\r\n      ...this.shipmentForm,\r\n      packageWeight: this.shipmentForm.packageWeight || 1,\r\n      packageValue: this.shipmentForm.packageValue || 100,\r\n      packageDescription: this.shipmentForm.packageDescription || 'Paquete general'\r\n    };\r\n    \r\n    this.subscription.add(\r\n      this.http.post(`${this.apiUrl}/shipments/create-with-validation`, shipmentData).subscribe({\r\n        next: (response: any) => {\r\n          this.isSubmitting = false;\r\n          \r\n          if (response.success) {\r\n            this.codigoGuia = response.shipment.trackingNumber;\r\n            this.successMessage = `¬°Env√≠o creado exitosamente! C√≥digo de gu√≠a: ${this.codigoGuia}`;\r\n            \r\n            // Generar PDF autom√°ticamente\r\n            this.generatePDF();\r\n            \r\n            setTimeout(() => {\r\n              this.router.navigate(['/rastreo'], { \r\n                queryParams: { codigo: this.codigoGuia } \r\n              });\r\n            }, 3000);\r\n          } else {\r\n            this.errorMessage = response.message || 'Error al crear el env√≠o';\r\n          }\r\n        },\r\n        error: (error: HttpErrorResponse) => {\r\n          this.isSubmitting = false;\r\n          this.errorMessage = 'Error interno del servidor. Intenta nuevamente.';\r\n          console.error('Error creating shipment:', error);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  // Generar PDF de la gu√≠a\r\n  generatePDF(): void {\r\n    // Esta funci√≥n se implementar√° para generar el PDF con todos los datos\r\n    console.log('Generando PDF para gu√≠a:', this.codigoGuia);\r\n    \r\n    // Aqu√≠ se implementar√≠a la l√≥gica para generar el PDF\r\n    // Puede usar librer√≠as como jsPDF o llamar a un endpoint del backend\r\n  }\r\n\r\n  // Utilidades\r\n  clearMessages(): void {\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.currentStep = 1;\r\n    this.shipmentForm = {\r\n      receiverName: '',\r\n      receiverEmail: '',\r\n      receiverReference: 'casa',\r\n      receiverPoblado: '',\r\n      receiverMunicipio: '',\r\n      receiverDepartamento: '',\r\n      receiverPhone: '',\r\n      paymentMethodId: '',\r\n      packageTypeId: ''\r\n    };\r\n    this.costoTotal = 0;\r\n    this.codigoGuia = '';\r\n    this.clearMessages();\r\n  }\r\n\r\n  getStepTitle(step: number): string {\r\n    const titles = {\r\n      1: 'Informaci√≥n del Destinatario',\r\n      2: 'M√©todo de Pago',\r\n      3: 'Detalles del Paquete',\r\n      4: 'Resumen y Confirmaci√≥n'\r\n    };\r\n    return titles[step as keyof typeof titles] || 'Paso';\r\n  }\r\n\r\n  // Funci√≥n para obtener el peso m√°ximo permitido por tipo de paquete\r\n  getMaxWeightForPackageType(typeId: string): number {\r\n    const paquete = this.packageTypes.find(p => p._id === typeId);\r\n    return paquete ? paquete.specifications.maxWeight : 0;\r\n  }\r\n\r\n  // Funci√≥n para validar que el peso no exceda el m√°ximo\r\n  validateWeight(): boolean {\r\n    if (!this.shipmentForm.packageTypeId || !this.shipmentForm.packageWeight) {\r\n      return false;\r\n    }\r\n    const maxWeight = this.getMaxWeightForPackageType(this.shipmentForm.packageTypeId);\r\n    return this.shipmentForm.packageWeight <= maxWeight;\r\n  }\r\n\r\n  // ===== M√âTODOS DE B√öSQUEDA DE DIRECCIONES =====\r\n\r\n  // Filtrar departamentos seg√∫n la b√∫squeda\r\n  onBuscarDepartamento(): void {\r\n    if (this.busquedaDepartamento.length === 0) {\r\n      this.departamentosFiltrados = [];\r\n      this.mostrarListaDepartamentos = false;\r\n      return;\r\n    }\r\n\r\n    this.departamentosFiltrados = this.departamentosGuatemala\r\n      .map(depto => depto.nombre)\r\n      .filter(nombre => \r\n        nombre.toLowerCase().includes(this.busquedaDepartamento.toLowerCase())\r\n      )\r\n      .slice(0, 10); // Limitar a 10 resultados\r\n\r\n    this.mostrarListaDepartamentos = this.departamentosFiltrados.length > 0;\r\n  }\r\n\r\n  // Seleccionar departamento\r\n  seleccionarDepartamento(departamento: string): void {\r\n    this.shipmentForm.receiverDepartamento = departamento;\r\n    this.busquedaDepartamento = departamento;\r\n    this.mostrarListaDepartamentos = false;\r\n    \r\n    // Limpiar municipio cuando se cambia el departamento\r\n    this.shipmentForm.receiverMunicipio = '';\r\n    this.busquedaMunicipio = '';\r\n    this.municipiosFiltrados = [];\r\n    this.mostrarListaMunicipios = false;\r\n  }\r\n\r\n  // Filtrar municipios seg√∫n la b√∫squeda y departamento seleccionado\r\n  onBuscarMunicipio(): void {\r\n    if (this.busquedaMunicipio.length === 0) {\r\n      this.municipiosFiltrados = [];\r\n      this.mostrarListaMunicipios = false;\r\n      return;\r\n    }\r\n\r\n    // Si hay departamento seleccionado, filtrar solo los municipios de ese departamento\r\n    let municipiosParaFiltrar = this.todosLosMunicipios;\r\n    \r\n    if (this.shipmentForm.receiverDepartamento) {\r\n      municipiosParaFiltrar = this.todosLosMunicipios.filter(municipio => \r\n        municipio.departamento === this.shipmentForm.receiverDepartamento\r\n      );\r\n    }\r\n\r\n    this.municipiosFiltrados = municipiosParaFiltrar\r\n      .filter(municipio => \r\n        municipio.nombre.toLowerCase().includes(this.busquedaMunicipio.toLowerCase())\r\n      )\r\n      .slice(0, 10); // Limitar a 10 resultados\r\n\r\n    this.mostrarListaMunicipios = this.municipiosFiltrados.length > 0;\r\n  }\r\n\r\n  // Seleccionar municipio\r\n  seleccionarMunicipio(municipio: Municipio): void {\r\n    this.shipmentForm.receiverMunicipio = municipio.nombre;\r\n    this.busquedaMunicipio = municipio.nombre;\r\n    this.mostrarListaMunicipios = false;\r\n    \r\n    // Auto-completar departamento si no estaba seleccionado\r\n    if (!this.shipmentForm.receiverDepartamento) {\r\n      this.shipmentForm.receiverDepartamento = municipio.departamento;\r\n      this.busquedaDepartamento = municipio.departamento;\r\n    }\r\n  }\r\n\r\n  // Ocultar listas cuando se hace clic fuera\r\n  onBlurDepartamento(): void {\r\n    setTimeout(() => {\r\n      this.mostrarListaDepartamentos = false;\r\n    }, 200);\r\n  }\r\n\r\n  onBlurMunicipio(): void {\r\n    setTimeout(() => {\r\n      this.mostrarListaMunicipios = false;\r\n    }, 200);\r\n  }\r\n\r\n  // Mostrar listas al hacer focus\r\n  onFocusDepartamento(): void {\r\n    if (this.departamentosFiltrados.length > 0) {\r\n      this.mostrarListaDepartamentos = true;\r\n    }\r\n  }\r\n\r\n  onFocusMunicipio(): void {\r\n    if (this.municipiosFiltrados.length > 0) {\r\n      this.mostrarListaMunicipios = true;\r\n    }\r\n  }\r\n\r\n  // ===== M√âTODOS PARA SELECCI√ìN DE TIPO DE PAQUETE =====\r\n\r\n  // Seleccionar tipo de paquete\r\n  seleccionarTipoPaquete(tipo: TipoPaquete): void {\r\n    this.tipoSeleccionado = tipo;\r\n    \r\n    // Buscar el packageType correspondiente en el arreglo del servicio\r\n    const packageTypeCorrespondiente = this.packageTypes.find(pt => \r\n      pt.displayName.toLowerCase().includes(tipo.nombre.toLowerCase()) ||\r\n      tipo.nombre.toLowerCase().includes(pt.displayName.toLowerCase())\r\n    );\r\n    \r\n    if (packageTypeCorrespondiente && packageTypeCorrespondiente._id) {\r\n      this.shipmentForm.packageTypeId = packageTypeCorrespondiente._id;\r\n      this.onTipoPaqueteChange();\r\n    }\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}